---
apiVersion: v1
kind: Service
metadata:
  name: go-ipfs-all
  namespace: "ipfs"
spec:
  #type: ClusterIP
  # Uncomment the below line to create a Headless Service
  clusterIP: None
  selector:
    proj: "go-ipfs"
  ports:
  - protocol: TCP
    port: 4001
    targetPort: 4001
    name: swarm 
  - protocol: TCP
    port: 5001
    targetPort: 5001
    name: api 
  - protocol: TCP
    port: 8080
    targetPort: 8080
    name: gateway 
---
apiVersion: v1
kind: Service
metadata:
  name: go-ipfs-all-internal
  namespace: "ipfs"
spec:
  type: ClusterIP
  # Uncomment the below line to create a Headless Service
  #clusterIP: None
  selector:
    proj: "go-ipfs"
  ports:
  - protocol: TCP
    port: 4001
    targetPort: 4001
    name: swarm 
  - protocol: TCP
    port: 5001
    targetPort: 5001
    name: api 
  - protocol: TCP
    port: 8080
    targetPort: 8080
    name: gateway 
---
apiVersion: v1
kind: Service
metadata:
  name: go-ipfs-all-internal0
  namespace: "ipfs"
spec:
  type: ClusterIP
  # Uncomment the below line to create a Headless Service
  #clusterIP: None
  selector:
    proj: "go-ipfs"
    statefulset.kubernetes.io/pod-name: "go-ipfs-0"
  ports:
  - protocol: TCP
    port: 4001
    targetPort: 4001
    name: swarm 
  - protocol: TCP
    port: 5001
    targetPort: 5001
    name: api 
  - protocol: TCP
    port: 8080
    targetPort: 8080
    name: gateway 
---
apiVersion: v1
kind: Service
metadata:
  name: go-ipfs-all-internal1
  namespace: "ipfs"
spec:
  type: ClusterIP
  # Uncomment the below line to create a Headless Service
  #clusterIP: None
  selector:
    proj: "go-ipfs"
    statefulset.kubernetes.io/pod-name: "go-ipfs-1"
  ports:
  - protocol: TCP
    port: 4001
    targetPort: 4001
    name: swarm 
  - protocol: TCP
    port: 5001
    targetPort: 5001
    name: api 
  - protocol: TCP
    port: 8080
    targetPort: 8080
    name: gateway 
---
apiVersion: v1
kind: Service
metadata:
  name: go-ipfs-all-internal2
  namespace: "ipfs"
spec:
  type: ClusterIP
  # Uncomment the below line to create a Headless Service
  #clusterIP: None
  selector:
    proj: "go-ipfs"
    statefulset.kubernetes.io/pod-name: "go-ipfs-2"
  ports:
  - protocol: TCP
    port: 4001
    targetPort: 4001
    name: swarm 
  - protocol: TCP
    port: 5001
    targetPort: 5001
    name: api 
  - protocol: TCP
    port: 8080
    targetPort: 8080
    name: gateway 
---
apiVersion: v1
kind: Service
metadata:
  name: go-ipfs-publish-0
  namespace: "ipfs"
spec:
  type: LoadBalancer
  # Uncomment the below line to create a Headless Service
  #clusterIP: None
  selector:
    proj: "go-ipfs"
    statefulset.kubernetes.io/pod-name: "go-ipfs-0"
  ports:
  - protocol: TCP
    port: 5001
    targetPort: 5001
    name: api 
  - protocol: TCP
    port: 8080
    targetPort: 8080
    name: gateway 
---
apiVersion: v1
kind: Service
metadata:
  name: go-ipfs-publish-1
  namespace: "ipfs"
spec:
  type: LoadBalancer
  # Uncomment the below line to create a Headless Service
  #clusterIP: None
  selector:
    proj: "go-ipfs"
    statefulset.kubernetes.io/pod-name: "go-ipfs-1"
  ports:
  - protocol: TCP
    port: 5001
    targetPort: 5001
    name: api 
  - protocol: TCP
    port: 8080
    targetPort: 8080
    name: gateway 
---
apiVersion: v1
kind: Service
metadata:
  name: go-ipfs-publish-2
  namespace: "ipfs"
spec:
  type: LoadBalancer
  # Uncomment the below line to create a Headless Service
  #clusterIP: None
  selector:
    proj: "go-ipfs"
    statefulset.kubernetes.io/pod-name: "go-ipfs-2"
  ports:
  - protocol: TCP
    port: 5001
    targetPort: 5001
    name: api 
  - protocol: TCP
    port: 8080
    targetPort: 8080
    name: gateway 
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
    name: "go-ipfs"
    namespace: "ipfs"
spec:
  selector:
    matchLabels:
      app: "go-ipfs"
      proj: "go-ipfs"
  serviceName: "go-ipfs-all"
  replicas: 3
  template:
    metadata:
      labels:
        app: "go-ipfs"
        proj: "go-ipfs"
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: go-ipfs
        image: gcr.io/nft-platform-345404/github.com/vnggames/go-ipfs:latest
        readinessProbe:
          tcpSocket:
            port: 5001
          initialDelaySeconds: 5
          periodSeconds: 10
        ports:
        - containerPort: 4001
          name: swarm
        - containerPort: 5001
          name: api
        - containerPort: 8080
          name: gateway
        volumeMounts:
        - name: db
          mountPath: /data/ipfs
        - name: info
          mountPath: /data/info
      - name: ipfs-cluster
        image: gcr.io/nft-platform-345404/github.com/vnggames/ipfs-cluster:latest
        readinessProbe:
          tcpSocket:
            port: 9094
          initialDelaySeconds: 5
          periodSeconds: 10
        ports:
        - containerPort: 9094
          name: api
        - containerPort: 9096
          name: proxy
        volumeMounts:
        - name: dbcluster
          mountPath: /data/ipfs-cluster
        - name: info
          mountPath: /data/info
      volumes:
      - name: info
        persistentVolumeClaim:
          claimName: fileserver-claim
          readOnly: false
      nodeSelector:
        #<labelname>:value
        cloud.google.com/gke-nodepool: storage
  volumeClaimTemplates:
  - metadata:
      name: db
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi
  - metadata:
      name: dbcluster
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi
      nodeAffinity:
        required:
          nodeSelectorTerms:
          - matchExpressions:
            - key: topology.kubernetes.io/zone
              operator: In
              values:
              - asia-southeast1-a
            - key: topology.kubernetes.io/region
              operator: In
              values:
              - asia-southeast1